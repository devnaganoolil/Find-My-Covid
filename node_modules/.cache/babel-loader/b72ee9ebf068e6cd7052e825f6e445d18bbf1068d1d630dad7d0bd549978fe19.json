{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev Naganoolil\\\\Desktop\\\\Find-My-Covid\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-control-geocoder/dist/Control.Geocoder.css';\nimport 'leaflet-control-geocoder/dist/Control.Geocoder.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  center,\n  zoom\n}) => {\n  _s();\n  const [covidData, setCovidData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://covid-19-tracking.p.rapidapi.com/v1', {\n          method: 'GET',\n          headers: {\n            'X-RapidAPI-Key': '156cf06ba4msh2c2cdb55142a549p162ba6jsncff6594c9c0b',\n            'X-RapidAPI-Host': 'covid-19-tracking.p.rapidapi.com'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch COVID-19 data');\n        }\n        const data = await response.json();\n        setCovidData(data);\n      } catch (error) {\n        console.error('Error fetching COVID-19 data:', error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Initialize the geocoder control\n    const geocoder = L.Control.geocoder({\n      defaultMarkGeocode: false\n    }).on('markgeocode', e => {\n      const {\n        properties\n      } = e.geocode;\n      console.log('Selected location:', properties);\n    });\n\n    // Add the geocoder control to the map\n    geocoder.addTo(mapRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: zoom,\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://api.maptiler.com/maps/basic-v2/{z}/{x}/{y}.png?key=JdbYq0IOmnjd0Jgw8cH7\",\n        tileSize: 512,\n        zoomOffset: -1,\n        attribution: \"<a href=\\\"https://www.maptiler.com/copyright/\\\" target=\\\"_blank\\\">\\xA9 MapTiler</a> <a href=\\\"https://www.openstreetmap.org/copyright\\\" target=\\\"_blank\\\">\\xA9 OpenStreetMap contributors</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), covidData.map(country => /*#__PURE__*/_jsxDEV(Marker, {\n        position: country.Country_text,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: country.Country_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), \"Total Cases: \", country.TotalCases_text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), \"Total Deaths: \", country.TotalDeaths_text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), \"Total Recovered: \", country.TotalRecovered_text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, country.Country_text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n// Default Map props if none are specified\n_s(Map, \"MgSetJ8+UHwS+mfMgYNej1sdDww=\");\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: 37.0902,\n    lng: -95.7129\n  },\n  zoom: 4\n};\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Map","center","zoom","_s","covidData","setCovidData","fetchData","response","fetch","method","headers","ok","Error","data","json","error","console","message","geocoder","Control","defaultMarkGeocode","on","e","properties","geocode","log","addTo","mapRef","current","className","children","style","height","width","url","tileSize","zoomOffset","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","country","position","Country_text","TotalCases_text","TotalDeaths_text","TotalRecovered_text","_c","defaultProps","lat","lng","$RefreshReg$"],"sources":["C:/Users/Dev Naganoolil/Desktop/Find-My-Covid/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer } from 'react-leaflet';\r\nimport { Marker, Popup } from 'react-leaflet';\r\n\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-control-geocoder/dist/Control.Geocoder.css';\r\nimport 'leaflet-control-geocoder/dist/Control.Geocoder.js';\r\n\r\nconst Map = ({ center, zoom }) => {\r\n  const [covidData, setCovidData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://covid-19-tracking.p.rapidapi.com/v1', {\r\n          method: 'GET',\r\n          headers: {\r\n            'X-RapidAPI-Key': '156cf06ba4msh2c2cdb55142a549p162ba6jsncff6594c9c0b',\r\n            'X-RapidAPI-Host': 'covid-19-tracking.p.rapidapi.com',\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch COVID-19 data');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setCovidData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching COVID-19 data:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Initialize the geocoder control\r\n    const geocoder = L.Control.geocoder({\r\n      defaultMarkGeocode: false,\r\n    }).on('markgeocode', (e) => {\r\n      const { properties } = e.geocode;\r\n      console.log('Selected location:', properties);\r\n    });\r\n\r\n    // Add the geocoder control to the map\r\n    geocoder.addTo(mapRef.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer\r\n        center={center}\r\n        zoom={zoom}\r\n        style={{ height: '500px', width: '100%' }}\r\n      >\r\n        <TileLayer\r\n          url=\"https://api.maptiler.com/maps/basic-v2/{z}/{x}/{y}.png?key=JdbYq0IOmnjd0Jgw8cH7\"\r\n          tileSize={512}\r\n          zoomOffset={-1}\r\n          attribution='<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>'\r\n        />\r\n\r\n        {/* Add markers for each country using the geocoder control */}\r\n        {covidData.map((country) => (\r\n          <Marker\r\n            key={country.Country_text}\r\n            position={country.Country_text}  \r\n          >\r\n            <Popup>\r\n              <strong>{country.Country_text}</strong>\r\n              <br />\r\n              Total Cases: {country.TotalCases_text}\r\n              <br />\r\n              Total Deaths: {country.TotalDeaths_text}\r\n              <br />\r\n              Total Recovered: {country.TotalRecovered_text}\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Default Map props if none are specified\r\nMap.defaultProps = {\r\n  center: {\r\n    lat: 37.0902,\r\n    lng: -95.7129,\r\n  },\r\n  zoom: 4,\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}